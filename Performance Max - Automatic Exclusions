// ABOUT THE SCRIPT
// Automatically exclude search terms from performance max campaigns

////////////////////////////////////////////////////////////////////

var config = {
    LOG: false,

    DATE_RANGE: last_n_days(30), // Change the number of days of which data must be exported. Only change the number!
}

var negativeKeywordListName = ''; // Define the negative keyword list name as a variable between ''


//DON'T CHANGE ANYTHING BENEATH THIS

//////////////////////////////////////////////////////////////////////

function main() {
    // Create a new spreadsheet
    var spreadsheet = SpreadsheetApp.create('Performance Max Exclusions');
    var combinedSheet = spreadsheet.getSheets()[0]; // Get the first sheet

    //DON'T CHANGE ANYTHING BENEATH THIS LINE

    let campaignIterator = AdsApp
        .performanceMaxCampaigns()
        .withCondition("campaign.status = ENABLED")
        .get();

    while (campaignIterator.hasNext()) {
        let campaign = campaignIterator.next();

        let query = AdsApp.report(
            "SELECT campaign_search_term_insight.category_label " +
            "FROM campaign_search_term_insight " +
            "WHERE segments.date DURING LAST_30_DAYS " +
            "AND campaign_search_term_insight.campaign_id = '" + campaign.getId() + "' " +
            "AND segments.date BETWEEN '" + config.DATE_RANGE.split(',')[0] + "' AND '" + config.DATE_RANGE.split(',')[1] + "' "
        );

        if (config.LOG === true) {
            Logger.log("Report " + campaign.getName() + " contains " + query.rows().totalNumEntities() + " rows.");
        }

        query.exportToSheet(combinedSheet);

        // Iterate through the values in column A2:A and add each as a negative keyword
        var values = combinedSheet.getRange("A2:A" + combinedSheet.getLastRow()).getValues();
        for (var i = 0; i < values.length; i++) {
            var negativeKeyword = values[i][0];
            if (negativeKeyword) {
                addNegativeKeywordToExclusionList(negativeKeyword);
            }
        }
    }
}

// Function to add a negative keyword to the specified negative keyword list
function addNegativeKeywordToExclusionList(negativeKeyword) {
    var negativeKeywordListIterator = AdsApp.negativeKeywordLists().withCondition("Name = '" + negativeKeywordListName + "'").get();
    if (negativeKeywordListIterator.hasNext()) {
        var negativeKeywordList = negativeKeywordListIterator.next();
        negativeKeywordList.addNegativeKeyword(negativeKeyword);
        Logger.log("Added negative keyword '" + negativeKeyword + "' to the list: " + negativeKeywordList.getName());
    } else {
        Logger.log("Negative keyword list '" + negativeKeywordListName + "' not found.");
    }
}

//////////////////////////////////////////////////////////////////////

function last_n_days(n) {
    var from = new Date(),
        to = new Date();
    to.setUTCDate(from.getUTCDate() - n);
    from.setUTCDate(from.getUTCDate() - 1);
    return google_date_range(from, to);
}

//////////////////////////////////////////////////////////////////////

function google_date_range(from, to) {
    function google_format(date) {
        var date_array = [date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate()];
        if (date_array[1] < 10) date_array[1] = '0' + date_array[1];
        if (date_array[2] < 10) date_array[2] = '0' + date_array[2];
        return date_array.join('');
    }

    var inverse = (from > to);
    from = google_format(from);
    to = google_format(to);
    var result = [from, to];

    if (inverse) {
        result = [to, from];
    }

    return result.join(',');
}
